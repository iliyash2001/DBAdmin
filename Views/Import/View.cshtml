
@model DBAdmin.Controllers.DataTable

@{
    ViewBag.Title = "View";
}

<h2>View Colums and Verify Type</h2>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.0/jquery.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>

<script type="text/javascript">

    function FillDataBases() {


        var ServerName = $('#ServerName').val().trim();
        console.log(ServerName);

        $.ajax({
            url: 'Import/FillDatabase',
            type: "GET",
            dataType: "JSON",
            data: { servername: ServerName },
            success: function (response) {
                console.log(response);
                $("#DBName").html("");
                $.each(response, function (index, value) {
                    console.log(value)
                    $("#DBName").append(
                        $('<option></option>').val(value.DBName).html(value.DBName));
                });
            },
                error: function (error) {
                    alert('error; ' + error);
                }

                });
    }

</script>

@using (Html.BeginForm("Edit", "Import", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Server</h4>
    <hr />

    @*<div class="form-group">
            @Html.LabelFor(model => model.ServerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServerName, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.ServerName, "ServerName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ServerName", null, "-- Select Server --", htmlAttributes: new { @class = "form-control", @onchange = "FillDataBases()" })
            @Html.ValidationMessageFor(model => model.ServerName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DBName, "BookId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("DBName", null, "-- Select DataBase --", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DBName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TableName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TableName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TableName, "", new { @class = "text-danger" })
        </div>
    </div>


    @for (int i = 0; i < Model.Rows.Count(); i++)

    {
        <div class="form-group">
            @Html.LabelFor(model => model.Rows[i].ColumnName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rows[i].ColumnName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rows[i].ColumnName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rows[i].ColumnType, "ColumnType", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*//@Html.DropDownList("ColumnTypes", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.Rows[i].ColumnType, Model.Rows[0].ColumnTypes, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Rows[i].ColumnType, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create Table" class="btn btn-default" />
        </div>
    </div>

</div>

}

@*<table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ColumnName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ColumnType)
            </th>


        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(model => item.ColumnName)
                </td>
                <td>
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("ColumnTypes", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => item.ColumnType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>


            </tr>
        }

    </table>*@

